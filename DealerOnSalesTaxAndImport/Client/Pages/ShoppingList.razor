@using DealerOnSalesTaxAndImport.Models
<div class="col-6">

    <h3>Enter Your Shopping List</h3>
    <fieldset>
        <label for="ShoppingList">
            <textarea id="ShoppingList" cols=40 rows=10 @bind="NewItems" @bind:event="onchange"></textarea>
        </label>
    </fieldset>
    <button type="submit" @onclick="OnSubmitList">Submit</button>
</div>
<div class="col-8">
    <h3>Your Receipt</h3>
    @if(MyReceipt?.Any() ?? false)
    {
        <ul>
            @foreach (KeyValuePair<string,string> item in MyReceipt)
            {
                <li>@item.Key: @item.Value</li>
            }
        </ul>
    }
</div>


@code {
    public List<Item> ShopItems { get; set; }

    public string NewItems { get; set; }
    public Dictionary<string, string> MyReceipt { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ShopItems = new List<Item>();
        MyReceipt = new Dictionary<string, string>();
        await base.OnInitializedAsync();
    }

    protected void OnSubmitList()
    {
        ShopItems.Clear();
        MyReceipt.Clear();
        // check if NewItems is not empty
        if (NewItems != " ")
        {
            // create temp array from NewItems being split at "1 "
            string[] firstSplit = NewItems.Split("1 ");
            // itterate through each item in temp
            foreach (var item in firstSplit)
            {
                string[] finalSplit = item.Split(" at ");
                // if the item length is greater than 0
                if (finalSplit[0].Length > 0)
                {
                    ShopItems.Add(new Item ( finalSplit[0], decimal.Parse(finalSplit[1]), CheckImport(finalSplit[0])));
                }
                NewItems = string.Empty;
            }
            MyReceipt = Receipt(ShopItems);
        }

    }

    protected bool CheckImport(string item)
    {
        bool result = item.Contains("Imported") ? false : true;
        return result;

    }

    protected Dictionary<string, string> Receipt(List<Item> shoppingList)
    {
        Cart Result = new Cart(shoppingList);

        Result.CalculateReceiptTotals();
        var PrintedReceipt = Result.PrintCart();
        if(PrintedReceipt.Count() > 2)
        {
            return PrintedReceipt;
        }
        else
        {
            PrintedReceipt.Clear();
            return PrintedReceipt;
        }
    }


}
